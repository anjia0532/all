<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAB0Kwz/cikM/3AmC/9rJQr/aCML/2UiC/9kHw3/YBwN/10aDP9aGQ3/WBgN/1cXDv9VFw7/URYQ/1AW
        EP9OFhD/ThUT/00UFf9NFBX/TBUV/00WFv9NFhb/TRYX/04XGP9PGRn/Uxob/1QbHf9VHRz/WCAb/1si
        HP9eJR3/YScd/3ksC/93Kwz/dCkM/3EmC/9tJAr/aiIL/2chC/9kHg3/YRwN/14aDP9aGA3/WRcO/1YY
        Dv9VFw//UxcR/1EWEf9QFxL/TxUU/04VFv9OFRb/ThUW/08WF/9QFxj/URgZ/1MaG/9VGxz/Vhwe/1ce
        Hv9bIR7/XiMf/2IlIP9mKCH/gjEL/34tDP96Kg3/dykM/3ImC/9vIwv/ayEL/2ggDP9lHg7/YhwO/18Z
        Dv9cGA//WRcO/1cXD/9WFxH/VRYS/1IXEv9RFhX/UBUX/08VFv9QFhf/URcY/1IZGf9UGhz/VRsc/1Yc
        Hf9XHR7/Wh8g/18hI/9jIyT/aCYm/2wpKf+MNAv/iDIL/4MuC/9+Kwz/eSkM/3UmC/9vIgv/bCEL/2gg
        Dv9lHhD/YhwP/18ZD/9cGA//WhgP/1gYEf9XFxL/VhcT/1UWF/9SFhj/UBcX/1EXGP9SGBn/VBoc/1Ua
        Hv9WGh7/WBwg/1weIv9gICX/ZSIn/2okK/9vJy//dCg0/5k5Df+TNQz/jjIM/4kvDP+CKwz/fCgN/3Yl
        DP9xIgz/bCAN/2kfEP9mHhD/YxsR/18ZEP9dGRD/WxkR/1kYE/9YGBP/WBcX/1UWGP9TGBj/VBgZ/1UZ
        HP9WGh7/WBof/1obIf9fHiT/ZB8o/2ghLP9tIzH/dCU2/3knO/9/KUH/qD8N/6E7C/+bNwz/lTMM/44w
        DP+HLA3/gCgO/3knDf9zIw3/bSAO/2oeEP9mHRL/YxwS/2AaEv9dGRL/XBkU/1sZFf9ZGBb/WBcY/1gZ
        G/9ZGh3/WRke/1sZIP9eGiP/Yhwo/2ceLf9tHzP/dCE5/3sjP/+AJUX/hydM/48qU/+6TBP/sUQO/6o/
        DP+jOg3/nDUL/5QxDf+LLQ7/hCkP/30mD/91Iw//byAR/2sfE/9oHxX/YxwU/2AbFP9gHBb/XhsY/1sZ
        GP9bGRv/Wxkc/1wZHv9dGSH/YRom/2YcK/9rHTL/cx46/3kgQf+CIkn/iyRQ/5AnV/+ZKmH/pDFt/89k
        J//GWR//vE0U/7RED/+sPA3/pDgN/5s0DP+SLg//iCkP/4AoEP91IQ7/aRYK/2QUCf9lHhT/Yx0W/2Ec
        F/9gGxj/Xxoa/14ZHP9dGR3/Xxoh/2UZKf9qGzD/chs5/3ocQf+DHkn/iyFS/5MkXP+bKWb/pi9y/7M5
        gv+9Q5D/5IBB/912OP/TaC7/yVsj/75OGf+0RBL/qzsQ/6A1Dv+WMhD/iiUK/4k6Jf/Rvbr/nVtZ/2wW
        Ef9iGxP/Yh0X/2EcF/9gGhr/YBkd/2EaIv9nGir/bxo0/3gbPf+BHEj/ih5T/5MhXf+dKGn/qDB4/7U8
        h//BRpb/zFKj/9Vbr//piEj/54NE/+SBQ//eeD3/1m01/8peKf+9Tx7/s0IY/6o9FP+UJwP/0bKn////
        ///8+fn/xZGU/3okI/9hFhH/Yh0b/2MaHf9lGiL/bBks/3UZN/9/G0T/ihxR/5QfXv+eJmv/qTB6/7g9
        i//FSpz/z1So/9ZcsP/YXLL/3GG2/+qHRf/qh0j/6IVH/+aDR//if0X/23U9/9FnM//IXDH/t0EX/8J+
        Zv//////xqK5/9a80P//////3sHF/5BBRP9lEhX/aBol/3IbMP98Gj3/iBtN/5MgXP+eKGr/qTJ6/7Q7
        h//ARpX/zFGj/9Narv/YXbP/2V61/9xhuP/dX7j/7Y1H/+yJR//qhkj/6INF/+J9QP/ddDr/2G85/9Bk
        Mv/GaEL/+fPt/+jZ5P9uDlD/ehIs/8ihk//+////8+nr/61scP95GCn/gBdA/5EfVv+gKmz/rDV+/7M7
        hv+4PYn/v0iS/8hJnP/OTqP/1FWs/9lctP/bX7j/32G7/+Fjvf/wjkf/74xG/+yHRP/nfkD/4Hc5/9xx
        Nv/Xbjf/yl0o/+jJuf//////iz1x/3YWUf+uZF7/iR4Y/6JmY//t6ej//////8qfov+SMUX/iR5L/5Ei
        Wf+kLGv/rD10/7hYi/++RJD/xkaZ/81Kof/STqn/2Vax/99duf/hYb7/4mPA//OPR//wikL/64I7/+Z6
        OP/hdDf/23I4/9NhJv/ZmHr//////7qKqv9gADf/xaCv///////JnaL/mDk+/4g8QP/Kt7f//////9nA
        wv9/Kjr/m1Vl/8ufqv/w5+T/9fDx/8JVnP/FQpf/zEmh/9FMqP/XUK//3Va3/+Nev//lY8X/84xC/+6E
        PP/qfzb/5Xk3/+F0N//bazD/1XdG//368v/g0N7/aQBF/5hUdf//////6uDq//////+5haD/WwAP/596
        d///////8u/x//Dp6v//////7ens/9S6yP/8//3/z3+z/8M7lf/MS6P/0Eqo/9ZOr//bUrX/4Ve9/+Ze
        xP/yiDv/7YE4/+l9Nf/leDb/4nY5/9RkKf/qzbv//P///4c0a/9+JFf/8evr/+3j6f+ILk7/v4mR/3Mj
        MP+AREP/+/z7//z7/f/k2N3/waKq/5NPX/98IDT/awMu/+LU2v/gvNL/sC+A/8xLpP/RS6n/1U2u/9pQ
        tf/hU73/5FfD//CFOP/sgDf/6X02/+V6O//aZSj/3p59///////KprH/ghUu/7Z0eP/8/Pv/+PT2/7uB
        hP+TKjH/kDg6/+HW1f//////59nk/2oPQ/98KTr/t3d7/+XKy/+FM1r/t4mf//r5+v+cM2//tDaH/8xI
        o//WTq//20+1/+BSvP/jVMH/7oI5/+yAOP/oejj/3Wwy/8pQG//AYT//59PL///////OqKj/kzM6/6NS
        WP/n19j//////8+rrf/Vtbf//////7mZov/8/v3/iDRq/6l1jf//////5dbe/5dFWP+WQFD//////6he
        hP+QF1z/sDaF/8hEof/ZTrP/4FK8/+NUwP/tgTn/6Ho1/9llKP/HSxr/tzwS/6krBP+eLQz/z6aZ////
        ///n1Nb/oExT/5QyOf/MpKf/+vn6///////An6r/VgYP/+zp5P+2gaf/cx5I//z//v+nZXj/plZb/8id
        n///////yKC2/4MOTv+XJWj/qC18/8M+mv/YTrT/4VPA/+RzMv/UXCL/wkQT/7c4Dv+vNA3/qDMQ/6Eu
        Dv+PGgD/rm5e//fz8f/8+vv/snR4/5xJT//49vX/5Nne/2ofKP9VAgf/wKWm/+3h7f9jAjv/08HH////
        ///+/v7/8evt/+7j4v/t4+n/iSJa/44bXv+VIGf/pCd3/7s4kv/RSa3/zFAa/78+EP+2Ng3/sDQN/6gy
        DP+hLg3/mywQ/5YsE/+DFgD/jTwt/9/Oy///////8+3s//38/v9/Qkr/XA4Q/1sPFP9+S1H//////4gz
        Z/+scYX/2ri4/6piaP+OLTP/qmhu//////+hWYD/gQ9Q/5AgY/+VH2b/nyRy/7Iwh/+5OQ7/tDQN/64z
        DP+nMQz/oi4N/5wsDv+UKA7/jCYO/4ooFP98GQj/chcN/7mWkv//////pXp+/1cGCP9jGR3/XRMZ/1kR
        Gv/p5uT/uoij/4cfL/+jU1f/u4GE/+TMzP/6+Pj//////6x5lv96DUn/ih5c/48dYP+TH2X/miFt/64z
        DP+qMgv/pTAL/6AuDP+aKw3/lCgN/40mDv+IJA7/gSEO/3sgFP90GxL/ZQ4F/4ZOS/9mHhr/YBMV/10U
        Gf9fFx3/TgIK/7edof///v//7N7f///////z8vT/08TN/6t/lP+EOl//dRtK/3sZTv+BGlP/hhtZ/4wd
        X/+QHmP/pC8L/6AuDP+cLAv/lykM/5ImDf+NJQ7/hiMO/4AhDv96Hg//dRwR/3AcFP9sHRb/Xg0I/2AV
        Ff9dFBj/WhMX/1oVG/9PBxD/ekdQ/+Lb3f+9pqz/iFdn/2QeN/9XBCT/XAUp/2YNN/9vFkL/dBhH/3gZ
        TP99GlL/ghpW/4YbWv+aKgv/likL/5InDP+OJQz/iiQN/4QiDP9+IA3/eR0O/3UcEf9vGxL/ahkR/2QX
        Ef9hGBT/XhQW/1oTFv9ZEhj/VxIZ/1USGv9VEh3/UA0Z/0gAEP9NBBv/Wg8o/2AWMP9iFjT/ZhY6/2gV
        Pv9sFkL/cRhF/3QYSv94GU7/fRpR/5AmDP+NJQz/iSQM/4UiDP+AIAv/fB4M/3gdDv9zGxD/bhoQ/2gY
        EP9kFg//YBYR/10UEv9cEhb/WRIX/1cRGP9VERj/VBIa/1IRG/9RER3/UhUi/1MTJv9VEij/WBIr/1sS
        Lv9eEzL/YRM3/2UUPP9oFT//bBZC/3EXRf9zGEj/hSIM/4MhC/9/Hwv/fB4L/3kdDP90Gw7/cBoO/2sY
        Df9mFw7/YhUP/18VEP9dFBH/WxMT/1kSFf9WERf/VREY/1QRGP9SERr/UBEb/08RHP9OEB7/Tg4i/08O
        JP9RECb/VBEq/1cSLf9bEjD/XRIz/2ETOP9kEzz/ZxQ+/2oVQf97HQv/eR0M/3YdDf9zGw3/bxkO/2sX
        Df9nFwz/ZBYN/2AVDv9eFBD/XBQR/1oTEf9YEhT/VRAV/1IPFf9SDxb/Tw8W/00PGP9NEBr/TQ8b/00Q
        Hv9NDyH/TQ4j/00PI/9ODyX/UA8o/1MRLP9VEi//WBIx/1oSNP9dEjf/YRM5/3MbDf9wGg3/bhgM/2oX
        DP9nFgv/ZBYM/2EWDf9eFQ3/XRMO/1sTD/9ZEg//VRAR/1MOEv9RDhP/Tw4T/00OFf9LDhb/Sg0X/0oN
        GP9KDRn/Sg4b/0oOH/9KDSH/Sw4i/0sOI/9MDiX/TQ8n/08PKf9SECz/VBEu/1USMP9XEjH/aRcM/2YW
        DP9lFgz/YxUM/2EVDf9eFA3/XRQM/1oSDP9YEQ3/VhAO/1MOD/9RDRD/Tw0Q/04NEv9LDRP/SQ0U/0kN
        Ff9IDBb/SAwX/0cNGP9HDBn/Rwwd/0YKH/9IDCD/SQ0i/0kOI/9KDiX/Sw4m/0wOJ/9ODyn/UA8q/1IQ
        LP9iFQz/YBUM/18UDP9dFAz/WxML/1kRC/9XEAv/VBAL/1MPDf9RDQ//TwwP/04MD/9MDBH/SgwS/0gM
        Ev9HDBT/RwwU/0YLFf9FCxb/RQsX/0QMGP9EChv/RAke/0QKHf9FCh7/Rgsg/0cMIf9IDST/SQ0l/0kN
        Jf9LDSb/TA4n/1wTDP9aEgv/WRIK/1cRCv9WEAr/VBAL/1MOC/9RDgv/Tw0O/04MD/9ODA//SgwQ/0gM
        Ef9HDBL/RwwS/0UMFP9FDBT/RAsV/0MLFv9DCxj/QQsY/0EKGv9BCRz/Qgod/0IKHf9DCh//Qwof/0QK
        Iv9GDCT/Rw0l/0gNJf9IDSX/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>